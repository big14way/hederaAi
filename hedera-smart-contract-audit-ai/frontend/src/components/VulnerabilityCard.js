import React, { useState } from 'react';
import {
  Card,
  CardContent,
  Typography,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Box,
  Chip,
  Divider,
} from '@mui/material';
import ExpandMoreIcon from '@mui/icons-material/ExpandMore';
import ErrorIcon from '@mui/icons-material/Error';
import ReportIcon from '@mui/icons-material/Report';
import WarningIcon from '@mui/icons-material/Warning';
import InfoIcon from '@mui/icons-material/Info';
import BugReportIcon from '@mui/icons-material/BugReport';
import { CodeHighlighter } from './CodeHighlighter';

/**
 * Component to display a vulnerability card with details
 */
const VulnerabilityCard = ({ vulnerability, contractCode, defaultExpanded = false }) => {
  const [expanded, setExpanded] = useState(defaultExpanded);

  const handleExpandChange = () => {
    setExpanded(!expanded);
  };

  const getSeverityIcon = (severity) => {
    switch (severity) {
      case 'Critical':
        return <ErrorIcon />;
      case 'High':
        return <ReportIcon />;
      case 'Medium':
        return <WarningIcon />;
      case 'Low':
        return <InfoIcon />;
      case 'Informational':
        return <BugReportIcon />;
      default:
        return <InfoIcon />;
    }
  };

  const getSeverityColor = (severity) => {
    switch (severity) {
      case 'Critical':
        return 'error';
      case 'High':
        return 'error';
      case 'Medium':
        return 'warning';
      case 'Low':
        return 'info';
      case 'Informational':
        return 'success';
      default:
        return 'default';
    }
  };

  const { title, severity, description, recommendation, codeSnippet } = vulnerability;

  return (
    <Card sx={{ mb: 2 }}>
      <Accordion expanded={expanded} onChange={handleExpandChange}>
        <AccordionSummary
          expandIcon={<ExpandMoreIcon />}
          sx={{
            flexDirection: 'row',
            '& .MuiAccordionSummary-content': {
              flexGrow: 1,
              display: 'flex',
              alignItems: 'center',
              gap: 1,
            },
          }}
        >
          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flexGrow: 1 }}>
            <Chip
              label={severity}
              color={getSeverityColor(severity)}
              icon={getSeverityIcon(severity)}
              size="small"
            />
            <Typography variant="subtitle1" sx={{ fontWeight: 500 }}>
              {title}
            </Typography>
          </Box>
        </AccordionSummary>
        <AccordionDetails>
          <CardContent sx={{ pt: 0 }}>
            <Typography variant="body1" gutterBottom sx={{ fontWeight: 500 }}>
              Description
            </Typography>
            <Typography variant="body2" color="text.secondary" paragraph>
              {description}
            </Typography>

            {codeSnippet && (
              <>
                <Typography variant="body1" gutterBottom sx={{ fontWeight: 500, mt: 2 }}>
                  Vulnerable Code
                </Typography>
                <Box sx={{ mb: 2 }}>
                  <CodeHighlighter
                    code={codeSnippet.code}
                    language="solidity"
                    fileName={`Lines ${codeSnippet.start}-${codeSnippet.end}`}
                  />
                </Box>
              </>
            )}

            <Divider sx={{ my: 2 }} />

            <Typography variant="body1" gutterBottom sx={{ fontWeight: 500 }}>
              Recommendation
            </Typography>
            <Typography variant="body2" color="text.secondary">
              {recommendation}
            </Typography>
          </CardContent>
        </AccordionDetails>
      </Accordion>
    </Card>
  );
};

export default VulnerabilityCard; 